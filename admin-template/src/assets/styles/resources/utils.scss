@use "sass:math";

// @mixin 通过 @include 调用使用
// % 通过 @extend 调用使用
@function division($a, $b) {
    @return math.div($a, $b);
}

// 文字超出隐藏，默认为单行超出隐藏，可设置多行 传递参数 调用 text-overflow(1,false)
@mixin text-overflow($line: 1, $fixed-width: true) {
    @if $line == 1 and $fixed-width == true {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
    @else {
        /* stylelint-disable-next-line value-no-vendor-prefix */
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: $line;
        overflow: hidden;
    }
}

// 定位居中，默认水平居中，可选择垂直居中，或者水平垂直都居中
@mixin position-center($type: x) {
    position: absolute;
    @if $type == x {
        left: 50%;
        transform: translateX(-50%);
    }
    @if $type == y {
        top: 50%;
        transform: translateY(-50%);
    }
    @if $type == xy {
        left: 50%;
        top: 50%;
        transform: translateX(-50%) translateY(-50%);
    }
}

// 文字两端对齐
%justify-align {
    text-align: justify;
    text-align-last: justify;
}

// 清除浮动
%clearfix {
    zoom: 1;
    &::before,
    &::after {
        content: "";
        display: block;
        clear: both;
    }
}
@mixin themeify {
    @each $theme-name, $theme-map in $themes {
        $theme-map: $theme-map !global;
        //判断html的data-theme的属性值  #{}是sass的插值表达式 $theme-name = $dark
        //& sass嵌套里的父容器标识   @content是混合器插槽，像vue的slot
        [data-theme="#{$theme-name}"] & {
            @content;
        }
    }
}
//声明一个根据Key获取颜色的function 返回格式： g-main-bg: #e5e9ee,
@function themed($key) {
    @return map-get($theme-map, $key);
}

//获取背景颜色
@mixin color($style,$color) {
    //$style 属性：background-color  调用方法：  @include color("background-color","g-main-bg"); 参数一：css属性；参数二：themes.css中$themes设置的颜色
    @include themeify {
        #{$style}: themed($color) !important; //themed($color)获取到对于Key的颜色  g-main-bg: #e5e9ee,
    }
}
